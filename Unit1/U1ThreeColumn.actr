;;
;; Mark Albrecht
;; mwa29@drexel.edu
;; CS630, Assignment 1
;;

;;
;; Unit 1: Tutor Solution Model
;; from the CMU ACT-R Tutorials
;;

(set-task "actr.tasks.tutorial.U1Tutor")

(sgp :esc t :lf .05)

(add-dm
    (fact34 ISA addition-fact addend1 3 addend2 4 sum 7)
    (fact67 ISA addition-fact addend1 6 addend2 7 sum 13)
    (fact103 ISA addition-fact addend1 10 addend2 3 sum 13) 
    (fact17 ISA addition-fact addend1 1 addend2 7 sum 8)
    
    (fact94 ISA addition-fact addend1 9 addend2 4 sum 13)
    (fact113 ISA addition-fact addend1 1 addend2 13 sum 14)
    (fact104 ISA addition-fact addend1 10 addend2 4 sum 14)
    
    (3fact194 ISA addition-fact addend1 1 addend2 9 addend3 4 sum 14)
    (3fact125 ISA addition-fact addend1 1 addend2 2 addend3 5 sum 8)
    
    ; 296 + 547 = 843 - requires tens and hundreds carry (WORKING)
    (goal isa add-pair hun1 2 ten1 9 one1 6 hun2 5 ten2 4 one2 7)
    
    ; 111 + 111 = 222 - requires no carry (WORKING)
    (fact11 ISA addition-fact addend1 1 addend2 1 sum 2)
    ; (goal isa add-pair hun1 1 ten1 1 one1 1 hun2 1 ten2 1 one2 1)   
    
    ; 115 + 115 = 230 - requires carry to the tens (WORKING)
    (fact55 ISA addition-fact addend1 5 addend2 5 sum 10)
    (fact100 ISA addition-fact addend1 10 addend2 0 sum 10)
    (3fact111 ISA addition-fact addend1 1 addend2 1 addend3 1 sum 1)
    ;(goal isa add-pair hun1 1 ten1 1 one1 5 hun2 1 ten2 1 one2 5)   
    
    ; 151 + 151 = 302 - requires carry to the hundreds (NOT WORKING)
    ;(goal isa add-pair hun1 1 ten1 5 one1 1 hun2 1 ten2 5 one2 1)       
)


; START-PAIR
; IF the goal is to add a pair of numbers
;  and the ones digits of the pair are available
;  but the ones digit of the answer is nil
; THEN note in the one-ans slot that you are busy computing
;  the answer for the ones digit
;  and request a retrieval of the sum of the ones digits.
(p start-pair
    =goal>
        ISA           add-pair
        one1        =num1
        one2        =num2
        one-ans   nil
==>
    =goal>
        one-ans   busy
    +retrieval>
        ISA           addition-fact
        addend1  =num1
        addend2  =num2
)

; ADD-ONES
; IF the goal is to add a pair of numbers
;  and you are busy waiting for the answer for the ones digit
;  and the sum of the ones digits has been retrieved
; THEN store the sum as the ones answer
;  and note that you are busy checking the answer for the carry
;  and request a retrieval to determine if the sum equals 10
;  plus a remainder.
(p add-ones
    =goal>
        ISA              add-pair
        one-ans      busy
        one1           =num1
        one2           =num2
    =retrieval>
        ISA              addition-fact
        addend1    =num1
        addend2    =num2        
        sum            =sum
==>
    =goal>
        one-ans    =sum
        carry           busy
    +retrieval>
        ISA              addition-fact
        addend1     10
        sum             =sum
)

; PROCESS-CARRY
; IF the goal is to add a pair of numbers
;  and the tens digits are available
;  and you are busy working on the carry
;  and the one-ans equals a value which a retrieval
;  finds is the sum of 10 plus a remainder
; THEN make the ones answer the remainder
;  and note that the carry is 1
;  and note you are busy computing the sum of the tens digits
;  and request a retrieval of the sum of 1 and the tens digits.
(p process-carry
    =goal>
        ISA            add-pair
        ten1        =num1
        ten2        =num2
        carry         busy
        one-ans    =ones
    =retrieval>
        ISA           addition-fact
        addend1  10
        sum          =ones
        addend2  =remainder
==>
    =goal>
        carry         1
        ten-ans   busy
        one-ans =remainder
    +retrieval>
        ISA           addition-fact
        addend1   1
        addend2   =num1
        addend3   =num2
)

; NO-CARRY
; IF the goal is to add a pair of numbers
;  and the tens digits are available
;  and you are busy working on the carry
;  and the one-ans equals a sum
;  and there has been a retrieval failure
; THEN note that the carry is nil
;  and note you are busy computing the sum of the tens digits
;  and request a retrieval of the sum of the tens digits.
(p no-carry
    =goal>
        ISA          add-pair
        ten1      =num1
        ten2      =num2
        one-ans  =ones
        carry       =busy
    ?retrieval>
        state       error
==>
    =goal>
        carry       nil
        ten-ans  busy
    +retrieval>
        ISA          addition-fact
        addend1 =num1
        addend2 =num2
)

; ADD-TENS-CARRY
; IF the goal is to add a pair of numbers
;  and the tens digits are available
;  and you are busy computing the sum of the tens digits
;  and the carry is 1
;  and the sum of 1 and the tens digits has been retrieved
; THEN set the carry to 1
;  and request a retrieval of 10 plus that sum.
(p add-tens-carry
    =goal>
        ISA         add-pair
        ten1     =num1
        ten2     =num2
        carry      1
        ten-ans  busy
    =retrieval>
        ISA          addition-fact
        addend1 1
        addend2 =num1
        addend3 =num2
        sum        =sum
==>
    =goal>
        carry      1
        ten-ans =sum
    +retrieval>
        ISA          addition-fact
        addend1 10
        sum        =sum
)

; ADD-TENS
; IF the goal is to add a pair of numbers
;  and the tens digits are available
;  and you are busy computing the sum of the tens digits
;  and the carry is nil
;  and the sum of the tens digits has been retrieved
; THEN set the carry to busy
;  set the ten-ans to the sum
;  and request a retrieval of 10 plus that sum.
(p add-tens
    =goal>
        ISA          add-pair
        ten1        =num1
        ten2        =num2
        carry        nil
        ten-ans   busy
    =retrieval>
        ISA          addition-fact
        addend1 =num1
        addend2 =num2
        sum         =sum
==>
    =goal>
        ten-ans  =sum
        carry        busy
    +retrieval>
        ISA           addition-fact
        addend1  10
        sum          =sum
)


; PROCESS-TENS-CARRY
; IF the goal is to add a pair of numbers
;  and the hundreds digits are available
;  and the carry is 1
;  and the ten-ans equals a value which a retrieval
;  finds is the sum of 10 plus a remainder
; THEN make the tens answer the remainder
;  and note that the carry is 1
;  and note you are busy computing the sum of the hundreds digits
;  and request a retrieval of the sum of 1 and the hundreds digits.
(p process-tens-carry
    =goal>
        ISA            add-pair
        hun1        =num1
        hun2        =num2
        carry         1
        ten-ans    =tens
    =retrieval>
        ISA           addition-fact
        addend1  10
        sum          =tens
        addend2  =remainder
==>
    =goal>
        carry        1
        hun-ans   busy
        ten-ans    =remainder
    +retrieval>
        ISA           addition-fact
        addend1   1
        addend2   =num1
        addend3   =num2
)

; PROCESS-HUNDREDS-CARRY
; IF the goal is to add a pair of numbers
;  and the hundreds digits are available
;  and you are busy working on the carry
;  and the ten-ans equals a value which a retrieval
;  finds is the sum of 10 plus a remainder
; THEN make the tens answer the remainder
;  and note that the carry is 1
;  and note you are busy computing the sum of the hundreds digits
;  and request a retrieval of the sum of the hundreds digits.
(p process-hundreds-carry
    =goal>
        ISA            add-pair
        hun1        =num1
        hun2        =num2
        carry         busy
        ten-ans    =tens
    =retrieval>
        ISA           addition-fact
        addend1  10
        sum          =tens
        addend2  =remainder
==>
    =goal>
        carry         1
        hun-ans   busy
        ten-ans =remainder
    +retrieval>
        ISA           addition-fact
        addend1   =num1
        addend2   =num2
)

; NO-HUNDREDS-CARRY
; IF the goal is to add a pair of numbers
;  and the hundreds digits are available
;  and you are busy working on the carry
;  and the ten-ans equals a sum
;  and there has been a retrieval failure
; THEN note that the carry is nil
;  and note you are busy computing the sum of the hundreds digits
;  and request a retrieval of the sum of the hundreds digits.
(p no-hundreds-carry
    =goal>
        ISA          add-pair
        hun1      =num1
        hun2      =num2
        ten-ans  =tens
        carry       =busy
    ?retrieval>
        state       error
==>
    =goal>
        carry       nil
        hun-ans  busy
    +retrieval>
        ISA          addition-fact
        addend1 =num1
        addend2 =num2
)

; ADD-HUNDREDS-CARRY
; IF the goal is to add a pair of numbers
;  and the hundreds digits are available
;  and you are busy computing the sum of the hundreds digits
;  and the carry is 1
;  and the sum of 1 and the hundreds digits has been retrieved
; THEN set the carry to nil
;  and request a retrieval of 1 and the hundreds digits
(p add-hundreds-carry
    =goal>
        ISA         add-pair
        hun1     =num1
        hun2     =num2
        carry      1
        hun-ans  busy
    =retrieval>
        ISA          addition-fact
        addend1 1
        addend2 =num1
        addend3 =num2
        sum        =sum
==>
    =goal>
        carry      nil
    +retrieval>
        ISA          addition-fact
        addend1 1
        addend2 =num1
        addend3 =num2
)


; ADD-HUNDREDS-DONE
; IF the goal is to add a pair of numbers
;  and you are busy computing the sum of the hundreds digits
;  and the carry is nil
;  and an addition-fact has been retrieved
; THEN note the answer for the hundreds digits is the sum of that
;  retrieved chunk.
(p add-hundreds-done
    =goal>
        ISA          add-pair
        ten-ans   =tens
        one-ans   =ones
        hun-ans   busy
        carry        nil
    =retrieval>
        ISA          addition-fact
        sum         =sum
==>
    !output! (the answer is =sum =tens =ones)
    =goal>
        hun-ans   =sum
    -goal>
)


(goal-focus goal)
